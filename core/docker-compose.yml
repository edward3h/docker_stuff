version: '3.9'

networks: 
  docker_bus:
    external: true
  web_bus:
    external: true

services: 
    watchtower:
        command: --label-enable --cleanup --interval 3600
        image: containrrr/watchtower
        labels:
          - "com.centurylinklabs.watchtower.enable=true"
        network_mode: none
        restart: unless-stopped
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
    dockerproxy:
        depends_on:
            - watchtower
        environment:
            CONTAINERS: 1
        image: tecnativa/docker-socket-proxy
        labels:
            - "com.centurylinklabs.watchtower.enable=true"
        networks:
            - docker_bus
        ports:
            - 2375
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
        restart: unless-stopped
            
    traefik:
        depends_on:
            - dockerproxy
            - watchtower
        env_file: .tf.env
        image: traefik:2.0
        labels:
            - "com.centurylinklabs.watchtower.enable=true"
            - "traefik.enable=true"
            - "traefik.http.routers.dashboard.rule=PathPrefix(`/api`) || PathPrefix(`/dashboard`)"
            - "traefik.http.routers.dashboard.entrypoints=dashboard"
            - "traefik.http.routers.dashboard.service=api@internal"
        networks:
            - docker_bus
            - web_bus
        ports:
            - 80:80
            - 443:443
            - 8081:8081
        restart: unless-stopped
        volumes:
            - ./data/conf/traefik/acme:/etc/traefik/acme
            - ./data/conf/traefik/traefik.yml:/traefik.yml
            - ./data/conf/traefik/dynamic:/dynamic
            - ./data/volumes/traefik/tmp:/tmp

    # cron:
    #     image: mcuadros/ofelia:latest
    #     command: daemon --docker
    #     volumes:
    #         - /var/run/docker.sock:/var/run/docker.sock:ro

    traefik-forward-auth:
        image: thomseddon/traefik-forward-auth:2.1.0
        env_file: auth.env
        networks:
          - web_bus
        restart: "unless-stopped"
        labels: # you only need these if you're using an auth host
        # traefik
        - traefik.enable=true
        - traefik.docker.network=web_bus

        # traefikv2
        - "traefik.http.routers.auth.rule=Host(`auth.ethelred.org`)"
        - "traefik.http.routers.auth.entrypoints=web-secure"
        - "traefik.http.routers.auth.tls=true"
        # - "traefik.http.routers.auth.tls.domains[0].main=ethelred.org"
        # - "traefik.http.routers.auth.tls.domains[0].sans=*.ethelred.org"        
        - "traefik.http.routers.auth.tls.certresolver=default"
        - "traefik.http.routers.auth.service=auth@docker"
        - "traefik.http.services.auth.loadbalancer.server.port=4181"
        - "traefik.http.middlewares.forward-auth.forwardauth.address=http://traefik-forward-auth:4181"
        - "traefik.http.middlewares.forward-auth.forwardauth.trustForwardHeader=true"
        - "traefik.http.middlewares.forward-auth.forwardauth.authResponseHeaders=X-Forwarded-User"
        - "traefik.http.routers.auth.middlewares=forward-auth"

      # This simply validates that traefik forward authentication is working
    whoami:
        image: containous/whoami
        networks:
            - web_bus   
        restart: "unless-stopped"
        labels:
            # traefik
            - traefik.enable=true
            - traefik.docker.network=web_bus

            # traefikv2
            - "traefik.http.routers.whoami.rule=Host(`whoami.ethelred.org`)"
            - "traefik.http.routers.whoami.entrypoints=web-secure"
            - "traefik.http.routers.whoami.middlewares=forward-auth" # this line enforces traefik-forward-auth  
            - "traefik.http.routers.whoami.tls=true"
            - "traefik.http.routers.whoami.tls.certresolver=default"